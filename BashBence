#!/bin/bash

dbFile="prop/database.txt"
source $(dirname $0)/prop/config

easyQuestionCount=`grep -c "&e" $dbFile`
normalQuestionCount=`grep -c "&n" $dbFile`
hardQuestionCount=`grep -c "&h" $dbFile`

echo "Udvozlom a vizsgaztato programban!"
echo "Kerem valasszon a kovetkezo lehetosegek kozul!"
echo "1. Elkezdeni a vizsgat"
echo "2. Kilepes"
read chosenMenu
goodAnswers=0
wrongAnswers=0

function stringStrip {
	echo ${1:$2:${#1}}
}

while [ $chosenMenu != 1 ] && [ $chosenMenu != 2 ]
do
	echo "Rossz input, probalja ujra!"
	read chosenMenu
done

if [ $chosenMenu == 1 ]
then
	echo "A vizsgan " $((easyQuestion+normalQuestion+hardQuestion)) " szamu kerdesre kell valaszolni!"
	echo "Sok sikert!"
	if [ 0 == 0 ]
	then
		echo "Kovetkeznek a konnyu kerdesek!"
		konnyuKerdesLista=`grep -oP "(?<=KERD_KONNYU).*?(?=K_V)" $dbFile`
		IFS='%'
		arr=( $konnyuKerdesLista )
		declare -a answeredQuestions
		for (( i=1; i<=$easyQuestion; i++ ))
		do
			questionAlreadyAsked=0
			questionNumber=$(( ( RANDOM % $easyQuestion )  ))
			while [ "$questionAlreadyAsked" -eq 0 ]
			do
				questionAlreadyAsked=1
				questionNumber=$(( ( RANDOM % $easyQuestion )  ))
				for (( j=0; j<i-1; j++ ))
				do
					if [ "${answeredQuestions[j]}" == "$questionNumber" ]; then
						questionAlreadyAsked=0
					fi
				done
			done
			answeredQuestions+=($questionNumber)
			echo "A(z) $i -ik kerdes: "
			questionType="$(echo ${arr[$questionNumber]} | head -c 2 | head -c 1) "
			if [ "$questionType" == " " ]; then
				questionType="$(echo ${arr[$questionNumber]} | head -c 2 | tail -c 1) "
				currentQuestion=`stringStrip ${arr[$questionNumber]} 2`
			else
				questionType="$(echo ${arr[$questionNumber]} | head -c 1) "
				currentQuestion=`stringStrip ${arr[$questionNumber]} 1`
			fi
			echo $currentQuestion
			if [ "$questionType" -eq "1" ]
			then
				#valaszLista=`sed -n -e '/^+/p' $dbFile`
				joValasz=`sed -n "/$currentQuestion/,/%/p" $dbFile | tail -n +2`
				joValasz=`stringStrip $joValasz 1`
				read valasz
				if [ "$valasz" == "$joValasz" ]; then
					goodAnswers=$((goodAnswers+1))
					echo "Helyes valasz!"
				else
					wrongAnswers=$((wrongAnswers+1))
					echo "Helytelen valasz!!!"
				fi
			elif [ "$questionType" -eq "2" ]
			then
				valaszok=`sed -n "/$currentQuestion/,/%/p" $dbFile | tail -n +2`
				joValasz=`echo $valaszok | sed -n -e '/^+/p'`
				joValasz=`stringStrip $joValasz 1`
				lineCount=`echo $valaszok | wc -l`
				goodSelection=0
				declare -a alreadyBeen

				for (( b=1; b<=$lineCount; b++ ))
				do
					alreadyAsked=0
					ansNumber=$(( ( RANDOM % $lineCount ) + 1  ))
					while [ "$alreadyAsked" -eq 0 ]
					do
						alreadyAsked=1
						ansNumber=$(( ( RANDOM % $lineCount ) + 1  ))
						for (( j=0; j<b-1; j++ ))
						do
							if [ "${alreadyBeen[j]}" == "$ansNumber" ]; then
								alreadyAsked=0
							fi
						done
					done
					alreadyBeen+=($ansNumber)
					aValasz=`echo $valaszok | sed "$ansNumber"'q;d'`
					aValasz=`stringStrip $aValasz 1`
					echo "$b: " $aValasz
					if [ "$aValasz" == "$joValasz" ]; then
						goodSelection=$b
					fi
				done
				read valasz
				if [ "$valasz" == "$goodSelection" ]; then
					echo "Helyes valasz!"
					goodAnswers=$((goodAnswers+1))
				else
					echo "Helytelen valasz!!!"
					wrongAnswers=$((wrongAnswers+1))
				fi
			fi
			
		done
		echo "Kovetkeznek a kozepes nehezsegu kerdesek!"
		kozepesKerdesLista=`grep -oP "(?<=KERD_KOZEPES).*?(?=K_V)" $dbFile`
		IFS='%'
		arr=( $kozepesKerdesLista )
		declare -a answeredQuestions
		for (( i=1; i<=$normalQuestion; i++ ))
		do
			questionAlreadyAsked=0
			questionNumber=$(( ( RANDOM % $normalQuestion )  ))
			while [ "$questionAlreadyAsked" -eq 0 ]
			do
				questionAlreadyAsked=1
				questionNumber=$(( ( RANDOM % $normalQuestion )  ))
				for (( j=0; j<i-1; j++ ))
				do
					if [ "${answeredQuestions[j]}" == "$questionNumber" ]; then
						questionAlreadyAsked=0
					fi
				done
			done
			answeredQuestions+=($questionNumber)
			echo "A(z) $i -ik kerdes: "
			questionType="$(echo ${arr[$questionNumber]} | head -c 2 | head -c 1) "
			if [ "$questionType" == " " ]; then
				questionType="$(echo ${arr[$questionNumber]} | head -c 2 | tail -c 1) "
				currentQuestion=`stringStrip ${arr[$questionNumber]} 2`
			else
				questionType="$(echo ${arr[$questionNumber]} | head -c 1) "
				currentQuestion=`stringStrip ${arr[$questionNumber]} 1`
			fi
			echo $currentQuestion
			if [ "$questionType" -eq "1" ]
			then
				#valaszLista=`sed -n -e '/^+/p' $dbFile`
				joValasz=`sed -n "/$currentQuestion/,/%/p" $dbFile | tail -n +2`
				joValasz=`stringStrip $joValasz 1`
				read valasz
				if [ "$valasz" == "$joValasz" ]; then
					goodAnswers=$((goodAnswers+1))
					echo "Helyes valasz!"
				else
					wrongAnswers=$((wrongAnswers+1))
					echo "Helytelen valasz!!!"
				fi
			elif [ "$questionType" -eq "2" ]
			then
				valaszok=`sed -n "/$currentQuestion/,/%/p" $dbFile | tail -n +2`
				joValasz=`echo $valaszok | sed -n -e '/^+/p'`
				joValasz=`stringStrip $joValasz 1`
				lineCount=`echo $valaszok | wc -l`
				goodSelection=0
				declare -a alreadyBeen2
				for (( b=1; b<=$lineCount; b++ ))
				do
					alreadyAsked=0
					ansNumber=$(( ( RANDOM % $lineCount ) + 1  ))
					while [ "$alreadyAsked" -eq 0 ]
					do
						alreadyAsked=1
						ansNumber=$(( ( RANDOM % $lineCount ) + 1  ))
						for (( j=0; j<b-1; j++ ))
						do
							if [ "${alreadyBeen2[j]}" == "$ansNumber" ]; then
								alreadyAsked=0
							fi
						done
					done
					alreadyBeen2+=($ansNumber)
					aValasz=`echo $valaszok | sed "$ansNumber"'q;d'`
					aValasz=`stringStrip $aValasz 1`
					echo "$b: " $aValasz
					if [ "$aValasz" == "$joValasz" ]; then
						goodSelection=$b
					fi
				done
				read valasz
				if [ "$valasz" == "$goodSelection" ]; then
					echo "Helyes valasz!"
					goodAnswers=$((goodAnswers+1))
				else
					echo "Helytelen valasz!!!"
					wrongAnswers=$((wrongAnswers+1))
				fi
			fi
			
		done
		echo "Kovetkeznek a nehez kerdesek!"
		nehezKerdesLista=`grep -oP "(?<=KERD_NEHEZ).*?(?=K_V)" $dbFile`
		IFS='%'
		arr=( $nehezKerdesLista )
		declare -a answeredQuestions
		for (( i=1; i<=$hardQuestion; i++ ))
		do
			questionAlreadyAsked=0
			questionNumber=$(( ( RANDOM % $hardQuestion )  ))
			while [ "$questionAlreadyAsked" -eq 0 ]
			do
				questionAlreadyAsked=1
				questionNumber=$(( ( RANDOM % $hardQuestion )  ))
				for (( j=0; j<i-1; j++ ))
				do
					if [ "${answeredQuestions[j]}" == "$questionNumber" ]; then
						questionAlreadyAsked=0
					fi
				done
			done
			answeredQuestions+=($questionNumber)
			echo "A(z) $i -ik kerdes: "
			questionType="$(echo ${arr[$questionNumber]} | head -c 2 | head -c 1) "
			if [ "$questionType" == " " ]; then
				questionType="$(echo ${arr[$questionNumber]} | head -c 2 | tail -c 1) "
				currentQuestion=`stringStrip ${arr[$questionNumber]} 2`
			else
				questionType="$(echo ${arr[$questionNumber]} | head -c 1) "
				currentQuestion=`stringStrip ${arr[$questionNumber]} 1`
			fi
			echo $currentQuestion
			if [ "$questionType" -eq "1" ]
			then
				#valaszLista=`sed -n -e '/^+/p' $dbFile`
				joValasz=`sed -n "/$currentQuestion/,/%/p" $dbFile | tail -n +2`
				joValasz=`stringStrip $joValasz 1`
				read valasz
				if [ "$valasz" == "$joValasz" ]; then
					goodAnswers=$((goodAnswers+1))
					echo "Helyes valasz!"
				else
					wrongAnswers=$((wrongAnswers+1))
					echo "Helytelen valasz!!!"
				fi
			elif [ "$questionType" -eq "2" ]
			then
				valaszok=`sed -n "/$currentQuestion/,/%/p" $dbFile | tail -n +2`
				joValasz=`echo $valaszok | sed -n -e '/^+/p'`
				joValasz=`stringStrip $joValasz 1`
				lineCount=`echo $valaszok | wc -l`
				goodSelection=0
				declare -a alreadyBeen3

				for (( b=1; b<=$lineCount; b++ ))
				do
					alreadyAsked=0
					ansNumber=$(( ( RANDOM % $lineCount ) + 1  ))
					while [ "$alreadyAsked" -eq 0 ]
					do
						alreadyAsked=1
						ansNumber=$(( ( RANDOM % $lineCount ) + 1  ))
						for (( j=0; j<b-1; j++ ))
						do
							if [ "${alreadyBeen3[j]}" == "$ansNumber" ]; then
								alreadyAsked=0
							fi
						done
					done
					alreadyBeen3+=($ansNumber)
					aValasz=`echo $valaszok | sed "$ansNumber"'q;d'`
					aValasz=`stringStrip $aValasz 1`
					echo "$b: " $aValasz
					if [ "$aValasz" == "$joValasz" ]; then
						goodSelection=$b
					fi
				done
				read valasz
				if [ "$valasz" == "$goodSelection" ]; then
					echo "Helyes valasz!"
					goodAnswers=$((goodAnswers+1))
				else
					echo "Helytelen valasz!!!"
					wrongAnswers=$((wrongAnswers+1))
				fi
			fi
			
		done
		echo "Vege a kerdeseknek!"
		echo "A helyes valaszok szama: $goodAnswers"
		echo "A helytelen valaszok szama: $wrongAnswers"
		percentage=$(($goodAnswers*100/$(($easyQuestion+$normalQuestion+$hardQuestion))))%
		echo "Az eredmeny szazalekban: $percentage"
		if [ $percentage -ge $percentForFive ]; then
			echo "Az erdemjegye: 5"
		elif [ $percentage -ge $percentForFour ]; then
			echo "Az erdemjegye: 4"
		elif [ $percentage -ge $percentForThree ]; then
			echo "Az erdemjegye: 3"
		elif [ $percentage -ge $percentForTwo ]; then
			echo "Az erdemjegye: 2"
		else
			echo "Az erdemjegye: 1"
		fi
	fi
elif [ $chosenMenu == 2 ]
then
	exit 0
fi
